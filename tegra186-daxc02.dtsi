/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
I2C Busses:

i2c0 = "/i2c@3160000";
i2c1 = "/i2c@c240000";
i2c2 = "/i2c@3180000";
i2c3 = "/i2c@3190000";
i2c4 = "/i2c@31a0000";
i2c5 = "/i2c@31b0000";
i2c6 = "/i2c@31c0000";
i2c7 = "/i2c@c250000";
i2c8 = "/i2c@31e0000";
*/

/ {
    i2c@c240000 {
        status = "okay";
        #address-cells = <1>;
        #size-cells = <0>;

        daxc02_c@10 {
            compatible = "nova,daxc02";

            /* slave or master mode */
            trigger_mode = "master";

            /* I2C device address */
            reg = <0x10>;

            /* Device */
            devnode = "video1";

            /* Physical dimensions of sensor */
            physical_w = "4.8";
            physical_h = "3.6";

            /* Sensor Model */
            sensor_model ="mt9m021";

            /* Define any required hw resources needed by driver */
            vana-supply = <&en_vdd_cam_hv_2v8>;     // analog 2.8v
            vif-supply = <&en_vdd_cam>;             // interface 1.8v
            vdig-supply = <&en_vdd_cam_1v2>;        // digital 1.2v

            reset-gpios = <&tegra_main_gpio TEGRA_MAIN_GPIO(R, 1) GPIO_ACTIVE_HIGH>;

            clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>;
            clock-names = "cam_mclk1";
            clock-frequency = <24000000>;
            mclk = "cam_mclk1";

            avdd-reg = "vana";
            iovdd-reg = "vif";
            dvdd-reg = "vdig";

            mode0 {
                mclk_khz = "24000";
                num_lanes = "1";
                tegra_sinterface = "serial_c";
                discontinuous_clk = "yes";
                dpcm_enable = "false";
                cil_settletime = "0";

                active_w = "1280";
                active_h = "720";
                pixel_t = "bayer_rggb12";
                readout_orientation = "0";
                line_length = "1280";
                inherent_gain = "1";
                mclk_multiplier = "3.094";
                pix_clk_hz = "74250000";

                min_gain_val = "1";
                max_gain_val = "224";
                min_hdr_ratio = "";
                max_hdr_ratio = "";
                min_framerate = "1";
                max_framerate = "60";
                min_exp_time = "34";
                max_exp_time = "550385";
                embedded_metadata_height = "0";
            };
            ports {
                #address-cells = <0x1>;
                #size-cells = <0x0>;

                port@0 {
                    reg = <0x0>;
                    daxc02_out1: endpoint {
                        csi-port = <0x2>;
                        bus-width = <0x1>;
                        remote-endpoint = <&daxc02_csi_in1>;
                    };
                };
            };
        };
    };

    i2c@3180000 {
        status = "okay";
        #address-cells = <1>;
        #size-cells = <0>;

        daxc02_a@10 {
            compatible = "nova,daxc02";

            /* slave or master mode */
            trigger_mode = "master";

            /* I2C device address */
            reg = <0x10>;

            /* Device */
            devnode = "video0";

            /* Physical dimensions of sensor */
            physical_w = "4.8";
            physical_h = "3.6";

            /* Sensor Model */
            sensor_model ="mt9m021";

            /* Define any required hw resources needed by driver */
            /* ie. clocks, io pins, power sources */
            vana-supply = <&en_vdd_cam_hv_2v8>;     // analog 2.8v
            vif-supply = <&en_vdd_cam>;             // interface 1.8v
            vdig-supply = <&en_vdd_cam_1v2>;        // digital 1.2v

            reset-gpios = <&tegra_main_gpio TEGRA_MAIN_GPIO(R, 5) GPIO_ACTIVE_HIGH>;

            clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>;
            clock-names = "cam_mclk1";
            clock-frequency = <24000000>;
            mclk = "cam_mclk1";

            avdd-reg = "vana";
            iovdd-reg = "vif";
            dvdd-reg = "vdig";

            mode0 {
                mclk_khz = "24000";
                num_lanes = "1";
                tegra_sinterface = "serial_a";
                discontinuous_clk = "yes";
                dpcm_enable = "false";
                cil_settletime = "0";

                active_w = "1280";
                active_h = "720";
                pixel_t = "bayer_rggb12";
                readout_orientation = "0";
                line_length = "1280";
                inherent_gain = "1";
                mclk_multiplier = "3.094";
                pix_clk_hz = "74250000";

                min_gain_val = "1";
                max_gain_val = "224";
                min_hdr_ratio = "";
                max_hdr_ratio = "";
                min_framerate = "1";
                max_framerate = "60";
                min_exp_time = "34";
                max_exp_time = "550385";
                embedded_metadata_height = "0";
            };
            ports {
                #address-cells = <0x1>;
                #size-cells = <0x0>;

                port@0 {
                    reg = <0x0>;
                    daxc02_out0: endpoint {
                        csi-port = <0x0>;
                        bus-width = <0x1>;
                        remote-endpoint = <&daxc02_csi_in0>;
                    };
                };
            };
        };
    };

    host1x {
        vi@15700000 {
            num-channels = <0x2>;
            ports {
                #address-cells = <0x1>;
                #size-cells = <0x0>;

                port@0 {
                    reg = <0x0>;
                    status = "okay";
                    daxc02_vi_in0: endpoint {
                        status = "okay";
                        csi-port = <0x0>;
                        bus-width = <0x1>;
                        remote-endpoint = <&daxc02_csi_out0>;
                    };
                };
                port@1 {
                    reg = <0x1>;
                    status = "okay";
                    daxc02_vi_in1: endpoint {
                        status = "okay";
                        csi-port = <0x2>;
                        bus-width = <0x1>;
                        remote-endpoint = <&daxc02_csi_out1>;
                    };
                };
            };
        };

        nvcsi@150c0000 {
            num-channels = <2>;
            #address-cells = <1>;
            #size-cells = <0>;

            channel@0 {
                reg = <0>;
                ports {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        daxc02_csi_in0: endpoint@0 {
                            csi-port = <0>;
                            bus-width = <1>;
                            remote-endpoint = <&daxc02_out0>;
                        };
                    };
                    port@1 {
                        reg = <1>;
                        daxc02_csi_out0: endpoint@1 {
                            remote-endpoint = <&daxc02_vi_in0>;
                        };
                    };
                };
            };
            channel@1 {
                reg = <1>;
                ports {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        daxc02_csi_in1: endpoint@2 {
                            csi-port = <2>;
                            bus-width = <1>;
                            remote-endpoint = <&daxc02_out1>;
                        };
                    };
                    port@1 {
                        reg = <1>;
                        daxc02_csi_out1: endpoint@3 {
                            remote-endpoint = <&daxc02_vi_in1>;
                        };
                    };
                };
            };
        };
    };

    tegra-camera-platform {
        compatible = "nvidia, tegra-camera-platform";
        num_csi_lanes = <2>;
        max_lane_speed = <445500000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		max_pixel_rate = <750000>;
		isp_peak_byte_per_pixel = <2>;
		isp_bw_margin_pct = <25>;

        modules {
            module0 {
                badge = "daxc02_master_mt9m021";
                position = "front";
                orientation = "1";
                status = "okay";
                drivernode0 {
                    pcl_id = "v4l2_sensor";
                    devname = "daxc02 2-0010";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/daxc02_a@10";
                    status = "okay";
                };
            };
            module1 {
                badge = "daxc02_slave_mt9m021";
                position = "rear";
                orientation = "1";
                status = "okay";
                drivernode0 {
                    pcl_id = "v4l2_sensor";
                    devname = "daxc02 1-0010";
                    proc-device-tree = "/proc/device-tree/i2c@c240000/daxc02_c@10";
                    status = "okay";
                };
            };
        };
    };
};
